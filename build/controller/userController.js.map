{"version":3,"sources":["../../server/controller/userController.js"],"names":["createUser","req","res","user","User","create","body","token","generateAuthToken","status","send","e","errors","errmsg","push","key","message","login","findOne","email","password","tokens","favArticle","findById","userID","article","Article","articleID","articles","users","save","then","success","followSource","doc","source","Source","sourceID","sources","savedArticles","foundArticles","Promise","all","map","found","console","log","JSON","stringify","undefined","retrieveSession","passport","serializeUser","userId","done","deserializeUser"],"mappings":"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","sourcesContent":["import { User, Article, Source } from '../models';\nimport { passport } from '../server'\nimport { asyncMapping } from './connectingFuncs'\n\nexport const createUser  = async (req, res) => {\n  try {\n    const user = await User.create(req.body);\n    let token = await user.generateAuthToken()\n    res.status(200).send({user, token});\n  } catch (e) {\n// ************* Not super flushed out, need to return back to.\n    let errors = []\n    if(e.errmsg)errors.push(\"Email already taken\")\n    if(e.errors){\n      for(let key in e.errors){\n        if(e.errors[key].message) errors.push(e.errors[key].message)\n      }\n    }\n    res.send({errors})\n  }\n};\n\nexport const login = async (req, res) => {\n  try {\n    let user = await User.findOne({email: req.body.email})\n    if(user){\n      if(user.password === req.body.password){\n        res.send({user, token: user.tokens[0].token})\n      } else res.send({errors: ['password is incorrect']})\n    } else res.send({errors: ['email does not exist']})\n  } catch (e) {\n    res.send(e)\n  }\n};\n\nexport const favArticle = async (req, res) => {\n  let user = await User.findById(req.body.userID)\n  let article = await Article.findById(req.body.articleID)\n  user.articles.push(article)\n  article.users.push(user)\n  user.save().then(null, (e) => e)\n  article.save().then(null, (e) => e);\n  res.status(200).send({success: true})\n};\n\nexport const followSource = async (req, res) => {\n  let user = await User.findById(req.body.userID).then(doc => doc)\n  let source = await Source.findById(req.body.sourceID).then(doc => doc)\n  user.sources.push(source)\n  source.users.push(user)\n  user.save().then(null, (e) => e)\n  source.save().then(null, (e) => e);\n  res.status(200).send(source)\n};\n\nexport const savedArticles = async (req, res) => {\n  const { articles } = req.body;\n\n  let foundArticles = await Promise.all(articles.map(async (article) => {\n     let found = await Article.findById(article)\n     return found\n   }))\n   console.log(foundArticles)\n\n  res.status(200).send(JSON.stringify(foundArticles, undefined, 2));\n}\n\nexport const retrieveSession = (req, res) => {\n  res.status(200).send(req.user)\n}\n\npassport.serializeUser(function(userId, done) {\n  done(null, userId);\n});\n\npassport.deserializeUser(function(userId, done) {\n    done(null, userId);\n});\n"],"file":"userController.js"}
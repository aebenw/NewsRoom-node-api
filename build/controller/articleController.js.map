{"version":3,"sources":["../../server/controller/articleController.js"],"names":["newsapi","NewsAPI","process","env","NEWS_API","callArticles","req","res","articles","v2","topHeadlines","language","country","category","response","Article","findOrCreateWithSource","map","article","stringed","JSON","stringify","client","lpush","i","story","_doc","title","sadd","showArticle","id","params","findById","populate","status","send","undefined","getMostRecent","pageSize"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAHA,MAAMA,OAAO,GAAG,IAAIC,gBAAJ,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB,CAAhB;;AAKO,MAAMC,YAAY,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC9C,MAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACS,EAAR,CAAWC,YAAX,CAAwB;AAC3CC,IAAAA,QAAQ,EAAE,IADiC;AAE3CC,IAAAA,OAAO,EAAE,IAFkC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAxB,CAArB;AAMA,MAAIC,QAAQ,GAAG,MAAM,mCAAaN,QAAQ,CAACA,QAAtB,EAAgCO,gBAAQC,sBAAxC,CAArB,CAP8C,CAQ9C;AACA;AACA;;AACAF,EAAAA,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAI;AACtB,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAf;;AACAI,mBAAOC,KAAP,CAAa,YAAb,EAA2BJ,QAA3B;AACD,GAHD,EAX8C,CAe9C;;AACA,OAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxB,QAAIC,KAAK,GAAGX,QAAQ,CAACU,CAAD,CAAR,CAAYE,IAAZ,CAAiBC,KAA7B;;AACAL,mBAAOM,IAAP,CAAY,YAAZ,EAA0BH,KAA1B;AACD;AACF,CApBM;;;;AAsBA,MAAMI,WAAW,GAAG,OAAOvB,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAMuB,EAAE,GAAGxB,GAAG,CAACyB,MAAJ,CAAWD,EAAtB;AACA,MAAIZ,OAAO,GAAG,MAAMH,gBAAQiB,QAAR,CAAiBF,EAAjB,EAAqBG,QAArB,CAA8B,QAA9B,EAAwC,MAAxC,CAApB;AACA1B,EAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBf,IAAI,CAACC,SAAL,CAAeH,OAAf,EAAwBkB,SAAxB,EAAmC,CAAnC,CAArB;AACD,CAJM;;;;AAMA,MAAMC,aAAa,GAAG,YAAY;AACvC,MAAI7B,QAAQ,GAAG,MAAMR,OAAO,CAACS,EAAR,CAAWC,YAAX,CAAwB;AAC3CC,IAAAA,QAAQ,EAAE,IADiC;AAE3CC,IAAAA,OAAO,EAAE,IAFkC;AAG3CC,IAAAA,QAAQ,EAAE,SAHiC;AAI3CyB,IAAAA,QAAQ,EAAE;AAJiC,GAAxB,CAArB;AAOA,SAAO9B,QAAQ,CAACA,QAAhB;AACD,CATM","sourcesContent":["import NewsAPI from 'newsapi';\nconst newsapi = new NewsAPI(process.env.NEWS_API);\nimport { client } from '../config/config'\nimport { Article } from '../models'\nimport { asyncMapping }  from './connectingFuncs'\n\nexport const callArticles = async (req, res) => {\n  let articles = await newsapi.v2.topHeadlines({\n    language: 'en',\n    country: 'us',\n    category: \"general\",\n  })\n\n  let response = await asyncMapping(articles.articles, Article.findOrCreateWithSource)\n  // res.status(200).send(response)\n  //\n  // // Redis Caching for top stories, not ready for production\n  response.map(article => {\n    let stringed = JSON.stringify(article);\n    client.lpush('topStories', stringed)\n  })\n  //\n  for(let i = 0; i < 5; i++){\n    let story = response[i]._doc.title\n    client.sadd('mostRecent', story)\n  }\n}\n\nexport const showArticle = async (req, res) => {\n  const id = req.params.id;\n  let article = await Article.findById(id).populate('source', 'name')\n  res.status(200).send(JSON.stringify(article, undefined, 2));\n}\n\nexport const getMostRecent = async () => {\n  let articles = await newsapi.v2.topHeadlines({\n    language: 'en',\n    country: 'us',\n    category: \"general\",\n    pageSize: 5\n  })\n\n  return articles.articles\n}\n"],"file":"articleController.js"}
{"version":3,"sources":["../../server/controller/articleController.js"],"names":["newsapi","NewsAPI","process","env","NEWS_API","callArticles","req","res","articles","v2","topHeadlines","language","country","category","response","Article","findOrCreateWithSource","status","send","cachedArticles","map","article","JSON","stringify","client","lpush","mostRecent","i","console","log","_doc","title","push","showArticle","id","params","findById","populate","undefined"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAHA,MAAMA,OAAO,GAAG,IAAIC,gBAAJ,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB,CAAhB;;AAKO,MAAMC,YAAY,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC9C,MAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACS,EAAR,CAAWC,YAAX,CAAwB;AAC3CC,IAAAA,QAAQ,EAAE,IADiC;AAE3CC,IAAAA,OAAO,EAAE,IAFkC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAxB,CAArB;AAMA,MAAIC,QAAQ,GAAG,MAAM,mCAAaN,QAAQ,CAACA,QAAtB,EAAgCO,gBAAQC,sBAAxC,CAArB;AAEAT,EAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,QAArB,EAT8C,CAW9C;;AACA,MAAIK,cAAc,GAAGL,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAIC,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAxB,CAArB;;AACAG,iBAAOC,KAAP,CAAa,YAAb,EAA2BN,cAA3B;;AACA,MAAIO,UAAU,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACa,CAAD,CAAR,CAAYG,IAAZ,CAAiBC,KAA7B;;AACAP,mBAAOQ,IAAP,CAAYlB,QAAQ,CAACa,CAAD,CAAR,CAAYG,IAAZ,CAAiBC,KAA7B;AACD,GAnB6C,CAoB9C;;AACD,CArBM;;;;AAuBA,MAAME,WAAW,GAAG,OAAO3B,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAM2B,EAAE,GAAG5B,GAAG,CAAC6B,MAAJ,CAAWD,EAAtB;AACA,MAAIb,OAAO,GAAG,MAAMN,gBAAQqB,QAAR,CAAiBF,EAAjB,EAAqBG,QAArB,CAA8B,QAA9B,EAAwC,MAAxC,CAApB;AACA9B,EAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,IAAI,CAACC,SAAL,CAAeF,OAAf,EAAwBiB,SAAxB,EAAmC,CAAnC,CAArB;AACD,CAJM","sourcesContent":["import NewsAPI from 'newsapi';\nconst newsapi = new NewsAPI(process.env.NEWS_API);\nimport { client } from '../config/config'\nimport { Article } from '../models'\nimport { asyncMapping }  from './connectingFuncs'\n\nexport const callArticles = async (req, res) => {\n  let articles = await newsapi.v2.topHeadlines({\n    language: 'en',\n    country: 'us',\n    category: \"general\",\n  })\n\n  let response = await asyncMapping(articles.articles, Article.findOrCreateWithSource)\n\n  res.status(200).send(response)\n\n  // Redis Caching for top stories, not ready for production\n  let cachedArticles = response.map(article => JSON.stringify(article))\n  client.lpush('topStories', cachedArticles)\n  let mostRecent = []\n  for(let i = 0; i < 6; i++){\n    debugger\n    console.log(response[i]._doc.title)\n    client.push(response[i]._doc.title)\n  }\n  // client.lpush('mostRecent', ...mostRecent)\n}\n\nexport const showArticle = async (req, res) => {\n  const id = req.params.id;\n  let article = await Article.findById(id).populate('source', 'name')\n  res.status(200).send(JSON.stringify(article, undefined, 2));\n}\n"],"file":"articleController.js"}
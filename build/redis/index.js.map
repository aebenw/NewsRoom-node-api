{"version":3,"sources":["../../server/redis/index.js"],"names":["topStoryCache","req","res","next","sourceCache","client","get","err","data","status","send"],"mappings":";;;;;;;;AAAA;;AAGO,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACIA,EAAAA,IAAI,GARmC,CAS3C;AACA;AACD;;AACM,SAASC,WAAT,CAAqBH,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAoC;AACzCE,iBAAOC,GAAP,CAAW,SAAX,EAAsB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACnC,QAAGD,GAAH,EAAQ,MAAMA,GAAN;;AACR,QAAGC,IAAH,EAAQ;AACNN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;AACA;AACD;;AACCL,IAAAA,IAAI;AAEP,GARD;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {client} from '../server'\n\n\nexport function topStoryCache(req, res, next){\n  // client.get(\"topStories\", (err, data) => {\n  //   if(err) throw err;\n  //   // console.log(data, \"in cache function\")\n  //   if(data){\n  //     // console.log(data)\n  //     res.status(200).send(data)\n  //   } else {\n      next()\n  //   }\n  // })\n}\nexport function sourceCache(req, res, next){\n  client.get(\"sources\", (err, data) => {\n    if(err) throw err;\n    if(data){\n      res.status(200).send(data)\n      return\n    }\n      next()\n\n  })\n}\n\n// class Redis {\n//   constructor(){\n//     this.client = redis.createClient();\n//   }\n//\n//   sourceCache = () => {\n//\n//   }\n//\n//\n// }\n"],"file":"index.js"}
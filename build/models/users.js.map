{"version":3,"sources":["../../server/models/users.js"],"names":["Types","ObjectId","Schema","UserSchema","name","type","String","email","require","unique","validate","validator","isEmail","message","password","required","minlength","tokens","access","token","articles","ref","sources","comments","loadClass","UserClass","User","mongoose","model"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AACA,MAAM;AAAEA,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,IAA0BC,gBAAhC;AAEA,MAAMC,UAAU,GAAG,IAAID,gBAAJ,CAAW;AAC5BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC;AADF,GADsB;AAI5BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEC,MADD;AAELE,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAEA,mBAAUC,OADb;AAERC,MAAAA,OAAO,EAAG;AAFF;AAJL,GAJqB;AAa5BC,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAEC,MADE;AAERS,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,2BAAJ;AAHH,GAbkB;AAkB5BC,EAAAA,MAAM,EAAE,CAAC;AACPC,IAAAA,MAAM,EAAE;AACNb,MAAAA,IAAI,EAAEC,MADA;AAENS,MAAAA,QAAQ,EAAE;AAFJ,KADD;AAKPI,IAAAA,KAAK,EAAE;AACLd,MAAAA,IAAI,EAAEC,MADD;AAELS,MAAAA,QAAQ,EAAE;AAFL;AALA,GAAD,CAlBoB;AA4B5BK,EAAAA,QAAQ,EAAE,CAAC;AACTf,IAAAA,IAAI,EAAEJ,QADG;AAEToB,IAAAA,GAAG,EAAE;AAFI,GAAD,CA5BkB;AAgC5BC,EAAAA,OAAO,EAAE,CAAC;AACRjB,IAAAA,IAAI,EAAEJ,QADE;AAERoB,IAAAA,GAAG,EAAE;AAFG,GAAD,CAhCmB;AAoC5BE,EAAAA,QAAQ,EAAE,CAAC;AACTlB,IAAAA,IAAI,EAAEJ,QADG;AAEToB,IAAAA,GAAG,EAAE;AAFI,GAAD;AApCkB,CAAX,CAAnB;AA2CAlB,UAAU,CAACqB,SAAX,CAAqBC,kBAArB;;AAEA,MAAMC,IAAI,GAAGC,kBAASC,KAAT,CAAe,MAAf,EAAuBzB,UAAvB,CAAb;;eAEeuB,I","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport validator from 'validator'\nimport {UserClass} from './classes'\nconst { Types: { ObjectId } } = Schema\n\nconst UserSchema = new Schema({\n  name: {\n    type: String,\n    },\n  email: {\n    type: String,\n    require: true,\n    unique: true,\n    validate: {\n      validator: validator.isEmail,\n      message: `{VALUE} is not a valid email`\n    }\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: [5, 'password length too short']\n  },\n  tokens: [{\n    access: {\n      type: String,\n      required: true\n    },\n    token: {\n      type: String,\n      required: true\n    }\n  }],\n  articles: [{\n    type: ObjectId,\n    ref: 'Articles'\n  }],\n  sources: [{\n    type: ObjectId,\n    ref: 'Sources'\n  }],\n  comments: [{\n    type: ObjectId,\n    ref: 'Comment'\n  }]\n});\n\n\nUserSchema.loadClass(UserClass)\n\nconst User = mongoose.model('User', UserSchema);\n\nexport default User;\n"],"file":"users.js"}
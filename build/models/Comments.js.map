{"version":3,"sources":["../../server/models/Comments.js"],"names":["Types","ObjectId","Schema","CommentSchema","content","type","String","user","ref","article","Comment","mongoose","model"],"mappings":";;;;;;;AAAA;;;;AACA,MAAM;AAAEA,EAAAA,KAAK,EAAE;AAACC,IAAAA;AAAD;AAAT,IAAwBC,gBAA9B;AAEA,MAAMC,aAAa,GAAG,IAAID,gBAAJ,CAAW;AAC/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEC;AADC,GADsB;AAI/BC,EAAAA,IAAI,EAAE;AACJF,IAAAA,IAAI,EAAEJ,QADF;AAEJO,IAAAA,GAAG,EAAE;AAFD,GAJyB;AAQ/BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAEJ,QADC;AAEPO,IAAAA,GAAG,EAAE;AAFE;AARsB,CAAX,CAAtB,C,CAcE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO,GAAGC,kBAASC,KAAT,CAAe,SAAf,EAA0BT,aAA1B,CAAhB;;eAEeO,O","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nconst { Types: {ObjectId} } = Schema\n\nconst CommentSchema = new Schema({\n  content: {\n    type: String\n  },\n  user: {\n    type: ObjectId,\n    ref: 'User'\n  },\n  article: {\n    type: ObjectId,\n    ref: 'Articles'\n  }\n});\n\n  //*****WORK ON MIDDLEWARE FOR AUTOMATIC POPULATION***//\n// CommentSchema.post('find', async (doc) => {\n//   console.log(doc, \"________________\")\n//   await doc.populate({path: 'user', select: 'name'})\n//   .execPopulate()\n// })\n// CommentSchema.pre('find',  () => {\n//   console.log(this, \"_________________\")\n//   this.populate({path: 'user', select: 'name'})\n//   .execPopulate()\n// })\n\nconst Comment = mongoose.model('Comment', CommentSchema)\n\nexport default Comment;\n"],"file":"Comments.js"}
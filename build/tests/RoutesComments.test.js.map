{"version":3,"sources":["../../server/tests/RoutesComments.test.js"],"names":["request","require","app","before","done","Comment","remove","then","describe","comment","it","post","send","content","user","end","err","res","body","status","to","eq","have","property","get","_id"],"mappings":";;AACA;;AAEA;;;;AAHA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAQD,OAAO,CAAC,WAAD,CAArB;;AAIAE,MAAM,CAAEC,IAAD,IAAU;AACfC,kBAAQC,MAAR,CAAe,EAAf,EAAmBC,IAAnB,CAAwB,MAAMH,IAAI,EAAlC;AACD,CAFK,CAAN;AAIAI,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/B,MAAIC,OAAJ;AACAD,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAY;AAEpCE,IAAAA,EAAE,CAAC,2BAAD,EAA+BN,IAAD,IAAU;AACxCJ,MAAAA,OAAO,CAACE,GAAD,CAAP,CACCS,IADD,CACM,WADN,EAECC,IAFD,CAEM;AAACC,QAAAA,OAAO,EAAE,eAAV;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAFN,EAGCC,GAHD,CAGK,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBR,QAAAA,OAAO,GAAGQ,GAAG,CAACC,IAAd;AACA,0BAAOD,GAAG,CAACE,MAAX,EAAmBC,EAAnB,CAAsBC,EAAtB,CAAyB,GAAzB;AACA,0BAAOJ,GAAG,CAACC,IAAJ,CAASL,OAAhB,EAAyBO,EAAzB,CAA4BC,EAA5B,CAA+B,eAA/B;AACAjB,QAAAA,IAAI;AACL,OARD;AASD,KAVC,CAAF;AAYAM,IAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7B;AACA,wBAAOD,OAAP,EAAgBW,EAAhB,CAAmBE,IAAnB,CAAwBC,QAAxB,CAAiC,MAAjC;AACD,KAHC,CAAF;AAID,GAlBO,CAAR;AAmBAf,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCE,IAAAA,EAAE,CAAC,oCAAD,EAAwCN,IAAD,IAAU;AACjDJ,MAAAA,OAAO,CAACE,GAAD,CAAP,CACCsB,GADD,CACM,aAAYf,OAAO,CAACgB,GAAI,EAD9B,EAECV,GAFD,CAEK,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjB,0BAAOA,GAAG,CAACE,MAAX,EAAmBC,EAAnB,CAAsBC,EAAtB,CAAyB,GAAzB;AACA,0BAAOJ,GAAG,CAACC,IAAX,EAAiBE,EAAjB,CAAoBE,IAApB,CAAyBC,QAAzB,CAAkC,SAAlC;AACA,0BAAON,GAAG,CAACC,IAAJ,CAASL,OAAhB,EAAyBO,EAAzB,CAA4BC,EAA5B,CAA+B,eAA/B;AACAjB,QAAAA,IAAI;AACL,OAPD;AAQD,KATC,CAAF;AAUAM,IAAAA,EAAE,CAAC,kCAAD,EAAsCN,IAAD,IAAU;AAC/CJ,MAAAA,OAAO,CAACE,GAAD,CAAP,CACCsB,GADD,CACM,aAAYf,OAAO,CAACgB,GAAI,EAD9B,EAECV,GAFD,CAEK,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjB,0BAAOA,GAAG,CAACE,MAAX,EAAmBC,EAAnB,CAAsBC,EAAtB,CAAyB,GAAzB;AACA,0BAAOJ,GAAG,CAACC,IAAX,EAAiBE,EAAjB,CAAoBE,IAApB,CAAyBC,QAAzB,CAAkC,MAAlC;AACA,0BAAON,GAAG,CAACC,IAAJ,CAASJ,IAAhB,EAAsBM,EAAtB,CAAyBE,IAAzB,CAA8BC,QAA9B,CAAuC,MAAvC;AACAnB,QAAAA,IAAI;AACL,OAPD;AAQD,KATC,CAAF;AAUD,GArBO,CAAR;AAsBD,CA3CO,CAAR","sourcesContent":["const request = require('supertest');\nimport chai, { expect } from 'chai';\nconst {app} = require('../server');\nimport { Comment, User } from '../models'\n\n\nbefore((done) => {\n  Comment.remove({}).then(() => done())\n});\n\ndescribe('comment routes', () => {\n  let comment;\n  describe('post /comment', async () => {\n\n    it('should make a new Comment', (done) => {\n      request(app)\n      .post('/comments')\n      .send({content: \"first comment\", user: \"5c58887d6cfb068150d38d67\"})\n      .end((err, res) => {\n        comment = res.body\n        expect(res.status).to.eq(200);\n        expect(res.body.content).to.eq('first comment');\n        done()\n      })\n    })\n\n    it('should have a user', () => {\n      // console.log(comment)\n      expect(comment).to.have.property('user')\n    })\n  })\n  describe('get /comments/:id', () => {\n    it('should retrieve a specific comment', (done) => {\n      request(app)\n      .get(`/comments/${comment._id}`)\n      .end((err, res) => {\n        expect(res.status).to.eq(200)\n        expect(res.body).to.have.property('content')\n        expect(res.body.content).to.eq('first comment')\n        done()\n      })\n    })\n    it('should have the name of the user', (done) => {\n      request(app)\n      .get(`/comments/${comment._id}`)\n      .end((err, res) => {\n        expect(res.status).to.eq(200)\n        expect(res.body).to.have.property('user')\n        expect(res.body.user).to.have.property('name')\n        done()\n      })\n    })\n  })\n});\n"],"file":"RoutesComments.test.js"}